version: '3.7'

services:
  core-app:
    build: ./core
    container_name: "core-app"
    restart: always
    command:
      sh -c "goose -dir ./db postgres \"user=core password=core host=core-db sslmode=disable dbname=core\" up && ./build/cmd"
    ports:
      - 8080:8080
    networks:
      - dev
    depends_on:
      - redis
      - core-db
    stdin_open: true
    tty: true
    links:
      - core-db
    environment:
      - DATABASE_URL=postgres://core:core@core-db:5432/core

  frontend:
    build: ./front
    container_name: "frontend-dev"
    restart: always
    # volumes:
    #   - ./front:/app
    networks:
      - dev
    ports:
      - '80:80'
    stdin_open: true
    environment:
      - NODE_ENV=development
    depends_on:
      - "core-app"
      - "django-core"

  core-db:
    image: postgres:13.2-alpine
    container_name: "core-db"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev
    environment:
      - POSTGRES_USER=core
      - POSTGRES_PASSWORD=core
      - POSTGRES_DB=core
  redis:
    image: 'redislabs/redismod'
    ports:
      - '6379:6379'

  django-core:
    build:
      context: ./django_core
    container_name: django-core
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - django-postgres
    env_file:
      - django_core/.env.docker
    networks:
      - dev

  django-postgres:
    image: postgres:13.2-alpine
    container_name: django-postgres
    environment:
      POSTGRES_USER: django
      POSTGRES_PASSWORD: django
      POSTGRES_DB: django
    ports:
      - "5433:5432"
    networks:
      - dev

volumes:
  postgres_data:
  node-modules:

networks:
  dev: